// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Overwatch_Match_Tracker.Data;

#nullable disable

namespace Overwatch_Match_Tracker.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.GroupSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GroupSizes");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupSizeId")
                        .HasColumnType("int");

                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<int>("MatchResultId")
                        .HasColumnType("int");

                    b.Property<int>("QueueModeId")
                        .HasColumnType("int");

                    b.Property<int>("RankUpdate")
                        .HasColumnType("int");

                    b.Property<int>("TeammateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupSizeId");

                    b.HasIndex("HeroId");

                    b.HasIndex("MapId");

                    b.HasIndex("MatchResultId");

                    b.HasIndex("QueueModeId");

                    b.HasIndex("TeammateId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.MatchResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MatchResults");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.QueueMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QueueModes");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.Teammate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BattleTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teammates");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.Match", b =>
                {
                    b.HasOne("Overwatch_Match_Tracker.Model.GroupSize", "GroupSize")
                        .WithMany("Match")
                        .HasForeignKey("GroupSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overwatch_Match_Tracker.Model.Hero", "Hero")
                        .WithMany("Match")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overwatch_Match_Tracker.Model.Map", "Map")
                        .WithMany("Match")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overwatch_Match_Tracker.Model.MatchResult", "MatchResult")
                        .WithMany("Match")
                        .HasForeignKey("MatchResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overwatch_Match_Tracker.Model.QueueMode", "QueueMode")
                        .WithMany("Match")
                        .HasForeignKey("QueueModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overwatch_Match_Tracker.Model.Teammate", "Teammate")
                        .WithMany("Match")
                        .HasForeignKey("TeammateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupSize");

                    b.Navigation("Hero");

                    b.Navigation("Map");

                    b.Navigation("MatchResult");

                    b.Navigation("QueueMode");

                    b.Navigation("Teammate");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.GroupSize", b =>
                {
                    b.Navigation("Match");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.Hero", b =>
                {
                    b.Navigation("Match");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.Map", b =>
                {
                    b.Navigation("Match");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.MatchResult", b =>
                {
                    b.Navigation("Match");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.QueueMode", b =>
                {
                    b.Navigation("Match");
                });

            modelBuilder.Entity("Overwatch_Match_Tracker.Model.Teammate", b =>
                {
                    b.Navigation("Match");
                });
#pragma warning restore 612, 618
        }
    }
}
